Terminals unused in grammar

   END_OF_FILE
   EOL
   REAL8
   REAL16
   REAL10
   INT8
   INT16
   THEN
   DO


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declearation-list

    2 declearation-list: declearation-list declearation
    3                  | declearation

    4 declearation: var-declearation
    5             | fun-declearation

    6 var-declearation: type-specifier ID SEMICOLON
    7                 | type-specifier ID MLP INT10 MRP SEMICOLON

    8 type-specifier: TYPE_INT

    9 fun-declearation: type-specifier ID LP params RP compound-stmt

   10 params: param-list
   11       | TYPE_VOID

   12 param-list: param-list COMMA param
   13           | param

   14 param: type-specifier ID
   15      | type-specifier ID MLP MRP

   16 compound-stmt: LLP local-declearations statement-list LRP

   17 local-declearations: local-declearations var-declearation
   18                    | %empty

   19 statement-list: statement-list statement
   20               | %empty

   21 statement: expression-stmt
   22          | compound-stmt
   23          | selection-stmt
   24          | iteration-stmt
   25          | return-stmt

   26 expression-stmt: expression SEMICOLON
   27                | SEMICOLON

   28 selection-stmt: IF LP expression RP statement
   29               | IF LP expression RP statement ELSE statement

   30 iteration-stmt: WHILE LP expression RP statement

   31 return-stmt: RETURN SEMICOLON
   32            | RETURN expression SEMICOLON

   33 expression: var ASSIGN expression
   34           | simple-expression

   35 var: ID
   36    | ID MLP expression MRP

   37 simple-expression: additive-expression relop additive-expression
   38                  | additive-expression

   39 relop: GT
   40      | LT
   41      | LET
   42      | GET
   43      | EQ
   44      | NEQ

   45 additive-expression: additive-expression addop term
   46                    | term

   47 addop: ADD
   48      | SUB

   49 term: term mulop factor
   50     | factor

   51 mulop: MUL
   52      | DIV

   53 factor: LP expression RP
   54       | var
   55       | call
   56       | INT10

   57 call: ID LP args RP

   58 args: arg-list
   59     | %empty

   60 arg-list: arg-list COMMA expression
   61         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
END_OF_FILE (258)
EOL (259)
REAL8 (260)
REAL16 (261)
REAL10 (262)
INT8 (263)
INT16 (264)
INT10 (265) 7 56
ADD (266) 47
SUB (267) 48
MUL (268) 51
DIV (269) 52
ASSIGN (270) 33
LP (271) 9 28 29 30 53 57
RP (272) 9 28 29 30 53 57
MLP (273) 7 15 36
MRP (274) 7 15 36
LLP (275) 16
LRP (276) 16
THEN (277)
WHILE (278) 30
DO (279)
ELSE (280) 29
RETURN (281) 31 32
TYPE_INT (282) 8
TYPE_VOID (283) 11
LT (284) 40
GT (285) 39
IF (286) 28 29
SEMICOLON (287) 6 7 26 27 31 32
COMMA (288) 12 60
EQ (289) 43
GET (290) 42
LET (291) 41
NEQ (292) 44
ID (293) 6 7 9 14 15 35 36 57


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
declearation-list (41)
    on left: 2 3, on right: 1 2
declearation (42)
    on left: 4 5, on right: 2 3
var-declearation (43)
    on left: 6 7, on right: 4 17
type-specifier (44)
    on left: 8, on right: 6 7 9 14 15
fun-declearation (45)
    on left: 9, on right: 5
params (46)
    on left: 10 11, on right: 9
param-list (47)
    on left: 12 13, on right: 10 12
param (48)
    on left: 14 15, on right: 12 13
compound-stmt (49)
    on left: 16, on right: 9 22
local-declearations (50)
    on left: 17 18, on right: 16 17
statement-list (51)
    on left: 19 20, on right: 16 19
statement (52)
    on left: 21 22 23 24 25, on right: 19 28 29 30
expression-stmt (53)
    on left: 26 27, on right: 21
selection-stmt (54)
    on left: 28 29, on right: 23
iteration-stmt (55)
    on left: 30, on right: 24
return-stmt (56)
    on left: 31 32, on right: 25
expression (57)
    on left: 33 34, on right: 26 28 29 30 32 33 36 53 60 61
var (58)
    on left: 35 36, on right: 33 54
simple-expression (59)
    on left: 37 38, on right: 34
relop (60)
    on left: 39 40 41 42 43 44, on right: 37
additive-expression (61)
    on left: 45 46, on right: 37 38 45
addop (62)
    on left: 47 48, on right: 45
term (63)
    on left: 49 50, on right: 45 46 49
mulop (64)
    on left: 51 52, on right: 49
factor (65)
    on left: 53 54 55 56, on right: 49 50
call (66)
    on left: 57, on right: 55
args (67)
    on left: 58 59, on right: 57
arg-list (68)
    on left: 60 61, on right: 58 60


State 0

    0 $accept: . program $end

    TYPE_INT  shift, and go to state 1

    program            go to state 2
    declearation-list  go to state 3
    declearation       go to state 4
    var-declearation   go to state 5
    type-specifier     go to state 6
    fun-declearation   go to state 7


State 1

    8 type-specifier: TYPE_INT .

    $default  reduce using rule 8 (type-specifier)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: declearation-list .
    2 declearation-list: declearation-list . declearation

    TYPE_INT  shift, and go to state 1

    $default  reduce using rule 1 (program)

    declearation      go to state 9
    var-declearation  go to state 5
    type-specifier    go to state 6
    fun-declearation  go to state 7


State 4

    3 declearation-list: declearation .

    $default  reduce using rule 3 (declearation-list)


State 5

    4 declearation: var-declearation .

    $default  reduce using rule 4 (declearation)


State 6

    6 var-declearation: type-specifier . ID SEMICOLON
    7                 | type-specifier . ID MLP INT10 MRP SEMICOLON
    9 fun-declearation: type-specifier . ID LP params RP compound-stmt

    ID  shift, and go to state 10


State 7

    5 declearation: fun-declearation .

    $default  reduce using rule 5 (declearation)


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 declearation-list: declearation-list declearation .

    $default  reduce using rule 2 (declearation-list)


State 10

    6 var-declearation: type-specifier ID . SEMICOLON
    7                 | type-specifier ID . MLP INT10 MRP SEMICOLON
    9 fun-declearation: type-specifier ID . LP params RP compound-stmt

    LP         shift, and go to state 11
    MLP        shift, and go to state 12
    SEMICOLON  shift, and go to state 13


State 11

    9 fun-declearation: type-specifier ID LP . params RP compound-stmt

    TYPE_INT   shift, and go to state 1
    TYPE_VOID  shift, and go to state 14

    type-specifier  go to state 15
    params          go to state 16
    param-list      go to state 17
    param           go to state 18


State 12

    7 var-declearation: type-specifier ID MLP . INT10 MRP SEMICOLON

    INT10  shift, and go to state 19


State 13

    6 var-declearation: type-specifier ID SEMICOLON .

    $default  reduce using rule 6 (var-declearation)


State 14

   11 params: TYPE_VOID .

    $default  reduce using rule 11 (params)


State 15

   14 param: type-specifier . ID
   15      | type-specifier . ID MLP MRP

    ID  shift, and go to state 20


State 16

    9 fun-declearation: type-specifier ID LP params . RP compound-stmt

    RP  shift, and go to state 21


State 17

   10 params: param-list .
   12 param-list: param-list . COMMA param

    COMMA  shift, and go to state 22

    $default  reduce using rule 10 (params)


State 18

   13 param-list: param .

    $default  reduce using rule 13 (param-list)


State 19

    7 var-declearation: type-specifier ID MLP INT10 . MRP SEMICOLON

    MRP  shift, and go to state 23


State 20

   14 param: type-specifier ID .
   15      | type-specifier ID . MLP MRP

    MLP  shift, and go to state 24

    $default  reduce using rule 14 (param)


State 21

    9 fun-declearation: type-specifier ID LP params RP . compound-stmt

    LLP  shift, and go to state 25

    compound-stmt  go to state 26


State 22

   12 param-list: param-list COMMA . param

    TYPE_INT  shift, and go to state 1

    type-specifier  go to state 15
    param           go to state 27


State 23

    7 var-declearation: type-specifier ID MLP INT10 MRP . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 24

   15 param: type-specifier ID MLP . MRP

    MRP  shift, and go to state 29


State 25

   16 compound-stmt: LLP . local-declearations statement-list LRP

    $default  reduce using rule 18 (local-declearations)

    local-declearations  go to state 30


State 26

    9 fun-declearation: type-specifier ID LP params RP compound-stmt .

    $default  reduce using rule 9 (fun-declearation)


State 27

   12 param-list: param-list COMMA param .

    $default  reduce using rule 12 (param-list)


State 28

    7 var-declearation: type-specifier ID MLP INT10 MRP SEMICOLON .

    $default  reduce using rule 7 (var-declearation)


State 29

   15 param: type-specifier ID MLP MRP .

    $default  reduce using rule 15 (param)


State 30

   16 compound-stmt: LLP local-declearations . statement-list LRP
   17 local-declearations: local-declearations . var-declearation

    TYPE_INT  shift, and go to state 1

    $default  reduce using rule 20 (statement-list)

    var-declearation  go to state 31
    type-specifier    go to state 32
    statement-list    go to state 33


State 31

   17 local-declearations: local-declearations var-declearation .

    $default  reduce using rule 17 (local-declearations)


State 32

    6 var-declearation: type-specifier . ID SEMICOLON
    7                 | type-specifier . ID MLP INT10 MRP SEMICOLON

    ID  shift, and go to state 34


State 33

   16 compound-stmt: LLP local-declearations statement-list . LRP
   19 statement-list: statement-list . statement

    INT10      shift, and go to state 35
    LP         shift, and go to state 36
    LLP        shift, and go to state 25
    LRP        shift, and go to state 37
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    IF         shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    ID         shift, and go to state 42

    compound-stmt        go to state 43
    statement            go to state 44
    expression-stmt      go to state 45
    selection-stmt       go to state 46
    iteration-stmt       go to state 47
    return-stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 34

    6 var-declearation: type-specifier ID . SEMICOLON
    7                 | type-specifier ID . MLP INT10 MRP SEMICOLON

    MLP        shift, and go to state 12
    SEMICOLON  shift, and go to state 13


State 35

   56 factor: INT10 .

    $default  reduce using rule 56 (factor)


State 36

   53 factor: LP . expression RP

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 56
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 37

   16 compound-stmt: LLP local-declearations statement-list LRP .

    $default  reduce using rule 16 (compound-stmt)


State 38

   30 iteration-stmt: WHILE . LP expression RP statement

    LP  shift, and go to state 57


State 39

   31 return-stmt: RETURN . SEMICOLON
   32            | RETURN . expression SEMICOLON

    INT10      shift, and go to state 35
    LP         shift, and go to state 36
    SEMICOLON  shift, and go to state 58
    ID         shift, and go to state 42

    expression           go to state 59
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 40

   28 selection-stmt: IF . LP expression RP statement
   29               | IF . LP expression RP statement ELSE statement

    LP  shift, and go to state 60


State 41

   27 expression-stmt: SEMICOLON .

    $default  reduce using rule 27 (expression-stmt)


State 42

   35 var: ID .
   36    | ID . MLP expression MRP
   57 call: ID . LP args RP

    LP   shift, and go to state 61
    MLP  shift, and go to state 62

    $default  reduce using rule 35 (var)


State 43

   22 statement: compound-stmt .

    $default  reduce using rule 22 (statement)


State 44

   19 statement-list: statement-list statement .

    $default  reduce using rule 19 (statement-list)


State 45

   21 statement: expression-stmt .

    $default  reduce using rule 21 (statement)


State 46

   23 statement: selection-stmt .

    $default  reduce using rule 23 (statement)


State 47

   24 statement: iteration-stmt .

    $default  reduce using rule 24 (statement)


State 48

   25 statement: return-stmt .

    $default  reduce using rule 25 (statement)


State 49

   26 expression-stmt: expression . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 50

   33 expression: var . ASSIGN expression
   54 factor: var .

    ASSIGN  shift, and go to state 64

    $default  reduce using rule 54 (factor)


State 51

   34 expression: simple-expression .

    $default  reduce using rule 34 (expression)


State 52

   37 simple-expression: additive-expression . relop additive-expression
   38                  | additive-expression .
   45 additive-expression: additive-expression . addop term

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    LT   shift, and go to state 67
    GT   shift, and go to state 68
    EQ   shift, and go to state 69
    GET  shift, and go to state 70
    LET  shift, and go to state 71
    NEQ  shift, and go to state 72

    $default  reduce using rule 38 (simple-expression)

    relop  go to state 73
    addop  go to state 74


State 53

   46 additive-expression: term .
   49 term: term . mulop factor

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76

    $default  reduce using rule 46 (additive-expression)

    mulop  go to state 77


State 54

   50 term: factor .

    $default  reduce using rule 50 (term)


State 55

   55 factor: call .

    $default  reduce using rule 55 (factor)


State 56

   53 factor: LP expression . RP

    RP  shift, and go to state 78


State 57

   30 iteration-stmt: WHILE LP . expression RP statement

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 79
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 58

   31 return-stmt: RETURN SEMICOLON .

    $default  reduce using rule 31 (return-stmt)


State 59

   32 return-stmt: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 60

   28 selection-stmt: IF LP . expression RP statement
   29               | IF LP . expression RP statement ELSE statement

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 81
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 61

   57 call: ID LP . args RP

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    $default  reduce using rule 59 (args)

    expression           go to state 82
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    args                 go to state 83
    arg-list             go to state 84


State 62

   36 var: ID MLP . expression MRP

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 85
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 63

   26 expression-stmt: expression SEMICOLON .

    $default  reduce using rule 26 (expression-stmt)


State 64

   33 expression: var ASSIGN . expression

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 86
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 65

   47 addop: ADD .

    $default  reduce using rule 47 (addop)


State 66

   48 addop: SUB .

    $default  reduce using rule 48 (addop)


State 67

   40 relop: LT .

    $default  reduce using rule 40 (relop)


State 68

   39 relop: GT .

    $default  reduce using rule 39 (relop)


State 69

   43 relop: EQ .

    $default  reduce using rule 43 (relop)


State 70

   42 relop: GET .

    $default  reduce using rule 42 (relop)


State 71

   41 relop: LET .

    $default  reduce using rule 41 (relop)


State 72

   44 relop: NEQ .

    $default  reduce using rule 44 (relop)


State 73

   37 simple-expression: additive-expression relop . additive-expression

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    var                  go to state 87
    additive-expression  go to state 88
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 74

   45 additive-expression: additive-expression addop . term

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    var     go to state 87
    term    go to state 89
    factor  go to state 54
    call    go to state 55


State 75

   51 mulop: MUL .

    $default  reduce using rule 51 (mulop)


State 76

   52 mulop: DIV .

    $default  reduce using rule 52 (mulop)


State 77

   49 term: term mulop . factor

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    var     go to state 87
    factor  go to state 90
    call    go to state 55


State 78

   53 factor: LP expression RP .

    $default  reduce using rule 53 (factor)


State 79

   30 iteration-stmt: WHILE LP expression . RP statement

    RP  shift, and go to state 91


State 80

   32 return-stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 32 (return-stmt)


State 81

   28 selection-stmt: IF LP expression . RP statement
   29               | IF LP expression . RP statement ELSE statement

    RP  shift, and go to state 92


State 82

   61 arg-list: expression .

    $default  reduce using rule 61 (arg-list)


State 83

   57 call: ID LP args . RP

    RP  shift, and go to state 93


State 84

   58 args: arg-list .
   60 arg-list: arg-list . COMMA expression

    COMMA  shift, and go to state 94

    $default  reduce using rule 58 (args)


State 85

   36 var: ID MLP expression . MRP

    MRP  shift, and go to state 95


State 86

   33 expression: var ASSIGN expression .

    $default  reduce using rule 33 (expression)


State 87

   54 factor: var .

    $default  reduce using rule 54 (factor)


State 88

   37 simple-expression: additive-expression relop additive-expression .
   45 additive-expression: additive-expression . addop term

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 37 (simple-expression)

    addop  go to state 74


State 89

   45 additive-expression: additive-expression addop term .
   49 term: term . mulop factor

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76

    $default  reduce using rule 45 (additive-expression)

    mulop  go to state 77


State 90

   49 term: term mulop factor .

    $default  reduce using rule 49 (term)


State 91

   30 iteration-stmt: WHILE LP expression RP . statement

    INT10      shift, and go to state 35
    LP         shift, and go to state 36
    LLP        shift, and go to state 25
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    IF         shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    ID         shift, and go to state 42

    compound-stmt        go to state 43
    statement            go to state 96
    expression-stmt      go to state 45
    selection-stmt       go to state 46
    iteration-stmt       go to state 47
    return-stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 92

   28 selection-stmt: IF LP expression RP . statement
   29               | IF LP expression RP . statement ELSE statement

    INT10      shift, and go to state 35
    LP         shift, and go to state 36
    LLP        shift, and go to state 25
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    IF         shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    ID         shift, and go to state 42

    compound-stmt        go to state 43
    statement            go to state 97
    expression-stmt      go to state 45
    selection-stmt       go to state 46
    iteration-stmt       go to state 47
    return-stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 93

   57 call: ID LP args RP .

    $default  reduce using rule 57 (call)


State 94

   60 arg-list: arg-list COMMA . expression

    INT10  shift, and go to state 35
    LP     shift, and go to state 36
    ID     shift, and go to state 42

    expression           go to state 98
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 95

   36 var: ID MLP expression MRP .

    $default  reduce using rule 36 (var)


State 96

   30 iteration-stmt: WHILE LP expression RP statement .

    $default  reduce using rule 30 (iteration-stmt)


State 97

   28 selection-stmt: IF LP expression RP statement .
   29               | IF LP expression RP statement . ELSE statement

    ELSE  shift, and go to state 99

    ELSE      [reduce using rule 28 (selection-stmt)]
    $default  reduce using rule 28 (selection-stmt)


State 98

   60 arg-list: arg-list COMMA expression .

    $default  reduce using rule 60 (arg-list)


State 99

   29 selection-stmt: IF LP expression RP statement ELSE . statement

    INT10      shift, and go to state 35
    LP         shift, and go to state 36
    LLP        shift, and go to state 25
    WHILE      shift, and go to state 38
    RETURN     shift, and go to state 39
    IF         shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    ID         shift, and go to state 42

    compound-stmt        go to state 43
    statement            go to state 100
    expression-stmt      go to state 45
    selection-stmt       go to state 46
    iteration-stmt       go to state 47
    return-stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple-expression    go to state 51
    additive-expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 100

   29 selection-stmt: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 29 (selection-stmt)
