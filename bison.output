Terminals unused in grammar

   END_OF_FILE
   EOL
   REAL8
   REAL16
   REAL10
   INT8
   INT16
   DO


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declearation_list

    2 declearation_list: declearation_list declearation
    3                  | declearation

    4 declearation: var_declearation
    5             | fun_declearation

    6 var_declearation: type_specifier ID SEMICOLON
    7                 | type_specifier ID MLP INT10 MRP SEMICOLON

    8 type_specifier: TYPE_INT
    9               | TYPE_FLOAT

   10 fun_declearation: type_specifier ID LP params RP compound_stmt

   11 params: param_list
   12       | TYPE_VOID

   13 param_list: param_list COMMA param
   14           | param
   15           | %empty

   16 param: type_specifier ID
   17      | type_specifier ID MLP MRP

   18 compound_stmt: LLP local_declearations statement_list LRP

   19 local_declearations: local_declearations var_declearation
   20                    | %empty

   21 statement_list: statement_list statement
   22               | %empty

   23 statement: expression_stmt
   24          | compound_stmt
   25          | selection_stmt
   26          | iteration_stmt
   27          | return_stmt

   28 expression_stmt: expression SEMICOLON
   29                | SEMICOLON

   30 selection_stmt: IF LP expression RP statement
   31               | IF LP expression RP statement ELSE statement

   32 iteration_stmt: WHILE LP expression RP statement

   33 return_stmt: RETURN SEMICOLON
   34            | RETURN expression SEMICOLON

   35 expression: var ASSIGN expression
   36           | simple_expression

   37 var: ID
   38    | ID MLP expression MRP

   39 simple_expression: additive_expression relop additive_expression
   40                  | additive_expression

   41 relop: GT
   42      | LT
   43      | LET
   44      | GET
   45      | EQ
   46      | NEQ

   47 additive_expression: additive_expression addop term
   48                    | term

   49 addop: ADD
   50      | SUB

   51 term: term mulop factor
   52     | factor

   53 mulop: MUL
   54      | DIV

   55 factor: LP expression RP
   56       | var
   57       | call
   58       | INT10

   59 call: ID LP args RP

   60 args: arg_list
   61     | %empty

   62 arg_list: arg_list COMMA expression
   63         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
END_OF_FILE (258)
EOL (259)
REAL8 (260)
REAL16 (261)
REAL10 (262)
INT8 (263)
INT16 (264)
INT10 (265) 7 58
ADD (266) 49
SUB (267) 50
MUL (268) 53
DIV (269) 54
ASSIGN (270) 35
IF (271) 30 31
LP (272) 10 30 31 32 55 59
RP (273) 10 30 31 32 55 59
MLP (274) 7 17 38
MRP (275) 7 17 38
LLP (276) 18
LRP (277) 18
WHILE (278) 32
DO (279)
ELSE (280) 31
RETURN (281) 33 34
TYPE_INT (282) 8
TYPE_VOID (283) 12
TYPE_FLOAT (284) 9
LT (285) 42
GT (286) 41
SEMICOLON (287) 6 7 28 29 33 34
COMMA (288) 13 62
EQ (289) 45
GET (290) 44
LET (291) 43
NEQ (292) 46
ID (293) 6 7 10 16 17 37 38 59


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
declearation_list (41)
    on left: 2 3, on right: 1 2
declearation (42)
    on left: 4 5, on right: 2 3
var_declearation (43)
    on left: 6 7, on right: 4 19
type_specifier (44)
    on left: 8 9, on right: 6 7 10 16 17
fun_declearation (45)
    on left: 10, on right: 5
params (46)
    on left: 11 12, on right: 10
param_list (47)
    on left: 13 14 15, on right: 11 13
param (48)
    on left: 16 17, on right: 13 14
compound_stmt (49)
    on left: 18, on right: 10 24
local_declearations (50)
    on left: 19 20, on right: 18 19
statement_list (51)
    on left: 21 22, on right: 18 21
statement (52)
    on left: 23 24 25 26 27, on right: 21 30 31 32
expression_stmt (53)
    on left: 28 29, on right: 23
selection_stmt (54)
    on left: 30 31, on right: 25
iteration_stmt (55)
    on left: 32, on right: 26
return_stmt (56)
    on left: 33 34, on right: 27
expression (57)
    on left: 35 36, on right: 28 30 31 32 34 35 38 55 62 63
var (58)
    on left: 37 38, on right: 35 56
simple_expression (59)
    on left: 39 40, on right: 36
relop (60)
    on left: 41 42 43 44 45 46, on right: 39
additive_expression (61)
    on left: 47 48, on right: 39 40 47
addop (62)
    on left: 49 50, on right: 47
term (63)
    on left: 51 52, on right: 47 48 51
mulop (64)
    on left: 53 54, on right: 51
factor (65)
    on left: 55 56 57 58, on right: 51 52
call (66)
    on left: 59, on right: 57
args (67)
    on left: 60 61, on right: 59
arg_list (68)
    on left: 62 63, on right: 60 62


State 0

    0 $accept: . program $end

    TYPE_INT    shift, and go to state 1
    TYPE_FLOAT  shift, and go to state 2

    program            go to state 3
    declearation_list  go to state 4
    declearation       go to state 5
    var_declearation   go to state 6
    type_specifier     go to state 7
    fun_declearation   go to state 8


State 1

    8 type_specifier: TYPE_INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: TYPE_FLOAT .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declearation_list .
    2 declearation_list: declearation_list . declearation

    TYPE_INT    shift, and go to state 1
    TYPE_FLOAT  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declearation      go to state 10
    var_declearation  go to state 6
    type_specifier    go to state 7
    fun_declearation  go to state 8


State 5

    3 declearation_list: declearation .

    $default  reduce using rule 3 (declearation_list)


State 6

    4 declearation: var_declearation .

    $default  reduce using rule 4 (declearation)


State 7

    6 var_declearation: type_specifier . ID SEMICOLON
    7                 | type_specifier . ID MLP INT10 MRP SEMICOLON
   10 fun_declearation: type_specifier . ID LP params RP compound_stmt

    ID  shift, and go to state 11


State 8

    5 declearation: fun_declearation .

    $default  reduce using rule 5 (declearation)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declearation_list: declearation_list declearation .

    $default  reduce using rule 2 (declearation_list)


State 11

    6 var_declearation: type_specifier ID . SEMICOLON
    7                 | type_specifier ID . MLP INT10 MRP SEMICOLON
   10 fun_declearation: type_specifier ID . LP params RP compound_stmt

    LP         shift, and go to state 12
    MLP        shift, and go to state 13
    SEMICOLON  shift, and go to state 14


State 12

   10 fun_declearation: type_specifier ID LP . params RP compound_stmt

    TYPE_INT    shift, and go to state 1
    TYPE_VOID   shift, and go to state 15
    TYPE_FLOAT  shift, and go to state 2

    $default  reduce using rule 15 (param_list)

    type_specifier  go to state 16
    params          go to state 17
    param_list      go to state 18
    param           go to state 19


State 13

    7 var_declearation: type_specifier ID MLP . INT10 MRP SEMICOLON

    INT10  shift, and go to state 20


State 14

    6 var_declearation: type_specifier ID SEMICOLON .

    $default  reduce using rule 6 (var_declearation)


State 15

   12 params: TYPE_VOID .

    $default  reduce using rule 12 (params)


State 16

   16 param: type_specifier . ID
   17      | type_specifier . ID MLP MRP

    ID  shift, and go to state 21


State 17

   10 fun_declearation: type_specifier ID LP params . RP compound_stmt

    RP  shift, and go to state 22


State 18

   11 params: param_list .
   13 param_list: param_list . COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 20

    7 var_declearation: type_specifier ID MLP INT10 . MRP SEMICOLON

    MRP  shift, and go to state 24


State 21

   16 param: type_specifier ID .
   17      | type_specifier ID . MLP MRP

    MLP  shift, and go to state 25

    $default  reduce using rule 16 (param)


State 22

   10 fun_declearation: type_specifier ID LP params RP . compound_stmt

    LLP  shift, and go to state 26

    compound_stmt  go to state 27


State 23

   13 param_list: param_list COMMA . param

    TYPE_INT    shift, and go to state 1
    TYPE_FLOAT  shift, and go to state 2

    type_specifier  go to state 16
    param           go to state 28


State 24

    7 var_declearation: type_specifier ID MLP INT10 MRP . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 25

   17 param: type_specifier ID MLP . MRP

    MRP  shift, and go to state 30


State 26

   18 compound_stmt: LLP . local_declearations statement_list LRP

    $default  reduce using rule 20 (local_declearations)

    local_declearations  go to state 31


State 27

   10 fun_declearation: type_specifier ID LP params RP compound_stmt .

    $default  reduce using rule 10 (fun_declearation)


State 28

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 29

    7 var_declearation: type_specifier ID MLP INT10 MRP SEMICOLON .

    $default  reduce using rule 7 (var_declearation)


State 30

   17 param: type_specifier ID MLP MRP .

    $default  reduce using rule 17 (param)


State 31

   18 compound_stmt: LLP local_declearations . statement_list LRP
   19 local_declearations: local_declearations . var_declearation

    TYPE_INT    shift, and go to state 1
    TYPE_FLOAT  shift, and go to state 2

    $default  reduce using rule 22 (statement_list)

    var_declearation  go to state 32
    type_specifier    go to state 33
    statement_list    go to state 34


State 32

   19 local_declearations: local_declearations var_declearation .

    $default  reduce using rule 19 (local_declearations)


State 33

    6 var_declearation: type_specifier . ID SEMICOLON
    7                 | type_specifier . ID MLP INT10 MRP SEMICOLON

    ID  shift, and go to state 35


State 34

   18 compound_stmt: LLP local_declearations statement_list . LRP
   21 statement_list: statement_list . statement

    INT10      shift, and go to state 36
    IF         shift, and go to state 37
    LP         shift, and go to state 38
    LLP        shift, and go to state 26
    LRP        shift, and go to state 39
    WHILE      shift, and go to state 40
    RETURN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    ID         shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 45
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 35

    6 var_declearation: type_specifier ID . SEMICOLON
    7                 | type_specifier ID . MLP INT10 MRP SEMICOLON

    MLP        shift, and go to state 13
    SEMICOLON  shift, and go to state 14


State 36

   58 factor: INT10 .

    $default  reduce using rule 58 (factor)


State 37

   30 selection_stmt: IF . LP expression RP statement
   31               | IF . LP expression RP statement ELSE statement

    LP  shift, and go to state 57


State 38

   55 factor: LP . expression RP

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 58
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 39

   18 compound_stmt: LLP local_declearations statement_list LRP .

    $default  reduce using rule 18 (compound_stmt)


State 40

   32 iteration_stmt: WHILE . LP expression RP statement

    LP  shift, and go to state 59


State 41

   33 return_stmt: RETURN . SEMICOLON
   34            | RETURN . expression SEMICOLON

    INT10      shift, and go to state 36
    LP         shift, and go to state 38
    SEMICOLON  shift, and go to state 60
    ID         shift, and go to state 43

    expression           go to state 61
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 42

   29 expression_stmt: SEMICOLON .

    $default  reduce using rule 29 (expression_stmt)


State 43

   37 var: ID .
   38    | ID . MLP expression MRP
   59 call: ID . LP args RP

    LP   shift, and go to state 62
    MLP  shift, and go to state 63

    $default  reduce using rule 37 (var)


State 44

   24 statement: compound_stmt .

    $default  reduce using rule 24 (statement)


State 45

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 46

   23 statement: expression_stmt .

    $default  reduce using rule 23 (statement)


State 47

   25 statement: selection_stmt .

    $default  reduce using rule 25 (statement)


State 48

   26 statement: iteration_stmt .

    $default  reduce using rule 26 (statement)


State 49

   27 statement: return_stmt .

    $default  reduce using rule 27 (statement)


State 50

   28 expression_stmt: expression . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 51

   35 expression: var . ASSIGN expression
   56 factor: var .

    ASSIGN  shift, and go to state 65

    $default  reduce using rule 56 (factor)


State 52

   36 expression: simple_expression .

    $default  reduce using rule 36 (expression)


State 53

   39 simple_expression: additive_expression . relop additive_expression
   40                  | additive_expression .
   47 additive_expression: additive_expression . addop term

    ADD  shift, and go to state 66
    SUB  shift, and go to state 67
    LT   shift, and go to state 68
    GT   shift, and go to state 69
    EQ   shift, and go to state 70
    GET  shift, and go to state 71
    LET  shift, and go to state 72
    NEQ  shift, and go to state 73

    $default  reduce using rule 40 (simple_expression)

    relop  go to state 74
    addop  go to state 75


State 54

   48 additive_expression: term .
   51 term: term . mulop factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 78


State 55

   52 term: factor .

    $default  reduce using rule 52 (term)


State 56

   57 factor: call .

    $default  reduce using rule 57 (factor)


State 57

   30 selection_stmt: IF LP . expression RP statement
   31               | IF LP . expression RP statement ELSE statement

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 79
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 58

   55 factor: LP expression . RP

    RP  shift, and go to state 80


State 59

   32 iteration_stmt: WHILE LP . expression RP statement

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 81
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 60

   33 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 33 (return_stmt)


State 61

   34 return_stmt: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 62

   59 call: ID LP . args RP

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    $default  reduce using rule 61 (args)

    expression           go to state 83
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    args                 go to state 84
    arg_list             go to state 85


State 63

   38 var: ID MLP . expression MRP

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 86
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 64

   28 expression_stmt: expression SEMICOLON .

    $default  reduce using rule 28 (expression_stmt)


State 65

   35 expression: var ASSIGN . expression

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 87
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 66

   49 addop: ADD .

    $default  reduce using rule 49 (addop)


State 67

   50 addop: SUB .

    $default  reduce using rule 50 (addop)


State 68

   42 relop: LT .

    $default  reduce using rule 42 (relop)


State 69

   41 relop: GT .

    $default  reduce using rule 41 (relop)


State 70

   45 relop: EQ .

    $default  reduce using rule 45 (relop)


State 71

   44 relop: GET .

    $default  reduce using rule 44 (relop)


State 72

   43 relop: LET .

    $default  reduce using rule 43 (relop)


State 73

   46 relop: NEQ .

    $default  reduce using rule 46 (relop)


State 74

   39 simple_expression: additive_expression relop . additive_expression

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    var                  go to state 88
    additive_expression  go to state 89
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 75

   47 additive_expression: additive_expression addop . term

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    var     go to state 88
    term    go to state 90
    factor  go to state 55
    call    go to state 56


State 76

   53 mulop: MUL .

    $default  reduce using rule 53 (mulop)


State 77

   54 mulop: DIV .

    $default  reduce using rule 54 (mulop)


State 78

   51 term: term mulop . factor

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    var     go to state 88
    factor  go to state 91
    call    go to state 56


State 79

   30 selection_stmt: IF LP expression . RP statement
   31               | IF LP expression . RP statement ELSE statement

    RP  shift, and go to state 92


State 80

   55 factor: LP expression RP .

    $default  reduce using rule 55 (factor)


State 81

   32 iteration_stmt: WHILE LP expression . RP statement

    RP  shift, and go to state 93


State 82

   34 return_stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 34 (return_stmt)


State 83

   63 arg_list: expression .

    $default  reduce using rule 63 (arg_list)


State 84

   59 call: ID LP args . RP

    RP  shift, and go to state 94


State 85

   60 args: arg_list .
   62 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 95

    $default  reduce using rule 60 (args)


State 86

   38 var: ID MLP expression . MRP

    MRP  shift, and go to state 96


State 87

   35 expression: var ASSIGN expression .

    $default  reduce using rule 35 (expression)


State 88

   56 factor: var .

    $default  reduce using rule 56 (factor)


State 89

   39 simple_expression: additive_expression relop additive_expression .
   47 additive_expression: additive_expression . addop term

    ADD  shift, and go to state 66
    SUB  shift, and go to state 67

    $default  reduce using rule 39 (simple_expression)

    addop  go to state 75


State 90

   47 additive_expression: additive_expression addop term .
   51 term: term . mulop factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 78


State 91

   51 term: term mulop factor .

    $default  reduce using rule 51 (term)


State 92

   30 selection_stmt: IF LP expression RP . statement
   31               | IF LP expression RP . statement ELSE statement

    INT10      shift, and go to state 36
    IF         shift, and go to state 37
    LP         shift, and go to state 38
    LLP        shift, and go to state 26
    WHILE      shift, and go to state 40
    RETURN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    ID         shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 97
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 93

   32 iteration_stmt: WHILE LP expression RP . statement

    INT10      shift, and go to state 36
    IF         shift, and go to state 37
    LP         shift, and go to state 38
    LLP        shift, and go to state 26
    WHILE      shift, and go to state 40
    RETURN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    ID         shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 98
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 94

   59 call: ID LP args RP .

    $default  reduce using rule 59 (call)


State 95

   62 arg_list: arg_list COMMA . expression

    INT10  shift, and go to state 36
    LP     shift, and go to state 38
    ID     shift, and go to state 43

    expression           go to state 99
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 96

   38 var: ID MLP expression MRP .

    $default  reduce using rule 38 (var)


State 97

   30 selection_stmt: IF LP expression RP statement .
   31               | IF LP expression RP statement . ELSE statement

    ELSE  shift, and go to state 100

    ELSE      [reduce using rule 30 (selection_stmt)]
    $default  reduce using rule 30 (selection_stmt)


State 98

   32 iteration_stmt: WHILE LP expression RP statement .

    $default  reduce using rule 32 (iteration_stmt)


State 99

   62 arg_list: arg_list COMMA expression .

    $default  reduce using rule 62 (arg_list)


State 100

   31 selection_stmt: IF LP expression RP statement ELSE . statement

    INT10      shift, and go to state 36
    IF         shift, and go to state 37
    LP         shift, and go to state 38
    LLP        shift, and go to state 26
    WHILE      shift, and go to state 40
    RETURN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    ID         shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 101
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 101

   31 selection_stmt: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 31 (selection_stmt)
